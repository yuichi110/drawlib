"""
This type stub file was generated by pyright.
"""

from typing import Literal, Optional
from drawlib.v0_1.private.core_canvas.image import CanvasImageFeature
from drawlib.v0_1.private.core_canvas.line import CanvasLineFeature
from drawlib.v0_1.private.core_canvas.original_arrow import CanvasOriginalArrowFeature
from drawlib.v0_1.private.core_canvas.original_polygon import CanvasOriginalPolygonFeature
from drawlib.v0_1.private.core_canvas.patches import CanvasPatchesFeature
from drawlib.v0_1.private.core_canvas.text import CanvasTextFeature
from drawlib.v0_1.private.util import error_handler

"""Canvas implementation module."""
class Canvas(CanvasImageFeature, CanvasLineFeature, CanvasOriginalPolygonFeature, CanvasOriginalArrowFeature, CanvasPatchesFeature, CanvasTextFeature):
    """Drawlib's canvas class.

    This class provides functionality to draw various shapes, images, lines,
    text, and apply patches on a matplotlib canvas. It supports saving the
    canvas to various image formats.
    """
    def __init__(self) -> None:
        """Initializes a Canvas object.

        Initializes an instance of Canvas by calling the constructors of its
        superclass features: CanvasImageFeature, CanvasLineFeature,
        CanvasOriginalPolygonFeature, CanvasOriginalArrowFeature,
        CanvasPatchesFeature, and CanvasTextFeature.
        """
        ...
    
    @error_handler
    def save(self, file: Optional[str] = ..., format: Optional[Literal["jpg", "png", "webp", "pdf"]] = ...) -> None:
        """Save canvas illustration to file.

        Args:
            file (optional): File path to save the image. Default is "<script-name>.png".
            format (optional): Image format to save. Default is "png".

        Returns:
            None

        Notes:
            If no arguments are provided, the canvas is saved as "<scriptfilename>.png"
            in the script's directory. For example, calling save() in a script "mydir/image1.py"
            will generate "mydir/image1.png".
        """
        ...
    


canvas = ...
clear = ...
config = ...
save = ...
shape = ...
image = ...
line = ...
line_curved = ...
line_bezier1 = ...
line_bezier2 = ...
lines = ...
lines_curved = ...
lines_bezier = ...
rhombus = ...
trapezoid = ...
parallelogram = ...
triangle = ...
arrow = ...
star = ...
chevron = ...
arc = ...
circle = ...
ellipse = ...
polygon = ...
rectangle = ...
regularpolygon = ...
wedge = ...
donuts = ...
fan = ...
text = ...
text_vertical = ...
get_image_zoom_original = ...
get_image_zoom_from_width = ...
get_charwidth_from_fontsize = ...
get_fontsize_from_charwidth = ...
