"""
This type stub file was generated by pyright.
"""

from typing import Tuple, Union
from PIL.Image import Image
from drawlib.v0_1.private.core.dimage import Dimage
from drawlib.v0_1.private.core.model import ImageStyle
from drawlib.v0_1.private.core_canvas.base import CanvasBase
from drawlib.v0_1.private.util import error_handler

"""Canvas's image feature implementation module."""
class CanvasImageFeature(CanvasBase):
    """A class to handle image drawing features on a canvas.

    This class provides methods to draw images with specified styles and transformations
    on a canvas.
    """
    def __init__(self) -> None:
        """Initialize the CanvasImageFeature object.

        This constructor initializes the CanvasImageFeature object by calling the constructor
        of its superclass CanvasBase.

        Args:
            None

        Returns:
            None
        """
        ...
    
    @error_handler
    def image(self, xy: Tuple[float, float], width: float, image: Union[str, Image, Dimage], angle: Union[int, float] = ..., style: Union[ImageStyle, str, None] = ...) -> None:
        """Draw an image on the canvas.

        Args:
            xy (Tuple[float, float]): Coordinates of the left bottom corner of the image.
            width (float): Width of the image. Height is calculated automatically based on image aspect ratio.
            image (Union[str, Image, Dimage]): Path to the image file or PIL Image object or Dimage object.
            angle (Union[int, float], optional): Rotation angle of the image in degrees (default is 0.0).
            style (Union[ImageStyle, str, None], optional): Style of the image (default is None).

        Returns:
            None

        Raises:
            ValueError: If invalid alignment (`style.halign` or `style.valign`) is provided.

        Notes:
            - If `style.halign` or `style.valign` is set to other than "center" and the image is rotated (`angle != 0`),
              a warning is logged, and alignment is set to "center".
            - The image is scaled and rotated based on the provided parameters and then added to the canvas as an
              annotation.
        """
        ...
    


