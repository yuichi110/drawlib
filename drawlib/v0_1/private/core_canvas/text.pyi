"""
This type stub file was generated by pyright.
"""

from typing import Optional, Tuple, Union
from drawlib.v0_1.private.core.model import TextStyle
from drawlib.v0_1.private.core_canvas.base import CanvasBase
from drawlib.v0_1.private.util import error_handler

"""Canvas's text feature implementation module."""
class CanvasTextFeature(CanvasBase):
    """A class for adding text features to a canvas using matplotlib."""
    def __init__(self) -> None:
        """Initializes a CanvasTextFeature object.

        Initializes an instance of CanvasTextFeature by calling the constructor
        of its superclass, CanvasBase.

        """
        ...
    
    @error_handler
    def text(self, xy: Tuple[float, float], text: str, size: Optional[float] = ..., angle: Union[int, float] = ..., style: Union[TextStyle, str, None] = ...) -> None:
        """Draw text on the canvas.

        Args:
            xy: Coordinates (x, y) of the text anchor point.
            text: Text string to be displayed.
            size (optional): Font size of the text.
            angle (optional): Rotation angle of the text (in degrees).
            style (optional): Style of the text.

        Returns:
            None

        """
        ...
    
    @error_handler
    def text_vertical(self, xy: Tuple[float, float], text: str, size: Optional[float] = ..., angle: Union[int, float] = ..., style: Optional[TextStyle] = ...) -> None:
        """Draw vertical text on the canvas.

        Args:
            xy: Coordinates (x, y) of the text anchor point.
            text: Text string to be displayed vertically.
            size (optional): Font size of the text.
            angle (optional): Rotation angle of the text (in degrees).
            style (optional): Style of the text.

        Returns:
            None

        """
        ...
    


