"""
This type stub file was generated by pyright.
"""

import typing
import drawlib.v0_1.private.core.model
import drawlib.v0_1.private.util

"""Phosphor icon functions."""
@drawlib.v0_1.private.util.error_handler
def acorn(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an acorn.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def address_book(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an address-book.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def address_book_tabs(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an address-book-tabs.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def air_traffic_control(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an air-traffic-control.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def airplane(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an airplane.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def airplane_in_flight(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an airplane-in-flight.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def airplane_landing(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an airplane-landing.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def airplane_takeoff(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an airplane-takeoff.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def airplane_taxiing(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an airplane-taxiing.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def airplane_tilt(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an airplane-tilt.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def airplay(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an airplay.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def alarm(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an alarm.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def alien(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an alien.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def align_bottom(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an align-bottom.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def align_bottom_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an align-bottom-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def align_center_horizontal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an align-center-horizontal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def align_center_horizontal_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an align-center-horizontal-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def align_center_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an align-center-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def align_center_vertical_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an align-center-vertical-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def align_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an align-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def align_left_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an align-left-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def align_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an align-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def align_right_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an align-right-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def align_top(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an align-top.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def align_top_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an align-top-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def amazon_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an amazon-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def ambulance(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an ambulance.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def anchor(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an anchor.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def anchor_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an anchor-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def android_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an android-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def angle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an angle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def angular_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an angular-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def aperture(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an aperture.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def app_store_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an app-store-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def app_window(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an app-window.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def apple_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an apple-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def apple_podcasts_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an apple-podcasts-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def approximate_equals(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an approximate-equals.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def archive(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an archive.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def armchair(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an armchair.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_arc_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-arc-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_arc_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-arc-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_bend_double_up_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-bend-double-up-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_bend_double_up_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-bend-double-up-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_bend_down_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-bend-down-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_bend_down_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-bend-down-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_bend_left_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-bend-left-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_bend_left_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-bend-left-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_bend_right_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-bend-right-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_bend_right_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-bend-right-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_bend_up_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-bend-up-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_bend_up_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-bend-up-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_circle_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-circle-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_circle_down_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-circle-down-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_circle_down_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-circle-down-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_circle_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-circle-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_circle_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-circle-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_circle_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-circle-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_circle_up_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-circle-up-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_circle_up_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-circle-up-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_clockwise(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-clockwise.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_counter_clockwise(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-counter-clockwise.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_down_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-down-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_down_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-down-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_elbow_down_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-elbow-down-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_elbow_down_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-elbow-down-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_elbow_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-elbow-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_elbow_left_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-elbow-left-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_elbow_left_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-elbow-left-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_elbow_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-elbow-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_elbow_right_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-elbow-right-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_elbow_right_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-elbow-right-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_elbow_up_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-elbow-up-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_elbow_up_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-elbow-up-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_fat_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-fat-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_fat_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-fat-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_fat_line_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-fat-line-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_fat_line_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-fat-line-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_fat_line_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-fat-line-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_fat_line_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-fat-line-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_fat_lines_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-fat-lines-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_fat_lines_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-fat-lines-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_fat_lines_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-fat-lines-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_fat_lines_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-fat-lines-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_fat_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-fat-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_fat_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-fat-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_line_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-line-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_line_down_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-line-down-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_line_down_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-line-down-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_line_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-line-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_line_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-line-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_line_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-line-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_line_up_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-line-up-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_line_up_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-line-up-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_square_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-square-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_square_down_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-square-down-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_square_down_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-square-down-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_square_in(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-square-in.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_square_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-square-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_square_out(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-square-out.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_square_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-square-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_square_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-square-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_square_up_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-square-up-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_square_up_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-square-up-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_u_down_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-u-down-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_u_down_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-u-down-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_u_left_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-u-left-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_u_left_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-u-left-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_u_right_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-u-right-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_u_right_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-u-right-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_u_up_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-u-up-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_u_up_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-u-up-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_up_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-up-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrow_up_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrow-up-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_clockwise(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-clockwise.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_counter_clockwise(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-counter-clockwise.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_down_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-down-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_horizontal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-horizontal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_in(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-in.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_in_cardinal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-in-cardinal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_in_line_horizontal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-in-line-horizontal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_in_line_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-in-line-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_in_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-in-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_left_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-left-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_merge(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-merge.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_out(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-out.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_out_cardinal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-out-cardinal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_out_line_horizontal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-out-line-horizontal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_out_line_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-out-line-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_out_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-out-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_split(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-split.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def arrows_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an arrows-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def article(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an article.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def article_medium(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an article-medium.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def article_ny_times(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an article-ny-times.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def asclepius(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an asclepius.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caduceus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caduceus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def asterisk(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an asterisk.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def asterisk_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an asterisk-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def at(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an at.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def atom(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an atom.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def avocado(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an avocado.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def axe(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an axe.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def baby(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an baby.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def baby_carriage(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an baby-carriage.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def backpack(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an backpack.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def backspace(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an backspace.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bag(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bag.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bag_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bag-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def balloon(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an balloon.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bandaids(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bandaids.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bank(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bank.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def barbell(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an barbell.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def barcode(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an barcode.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def barn(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an barn.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def barricade(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an barricade.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def baseball(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an baseball.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def baseball_cap(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an baseball-cap.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def baseball_helmet(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an baseball-helmet.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def basket(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an basket.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def basketball(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an basketball.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bathtub(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bathtub.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_charging(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-charging.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_charging_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-charging-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_empty(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-empty.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_full(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-full.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_high(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-high.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_low(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-low.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_medium(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-medium.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_plus_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-plus-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_vertical_empty(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-vertical-empty.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_vertical_full(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-vertical-full.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_vertical_high(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-vertical-high.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_vertical_low(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-vertical-low.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_vertical_medium(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-vertical-medium.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_warning(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-warning.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def battery_warning_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an battery-warning-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def beach_ball(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an beach-ball.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def beanie(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an beanie.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bed(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bed.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def beer_bottle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an beer-bottle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def beer_stein(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an beer-stein.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def behance_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an behance-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bell(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bell.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bell_ringing(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bell-ringing.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bell_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bell-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bell_simple_ringing(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bell-simple-ringing.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bell_simple_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bell-simple-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bell_simple_z(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bell-simple-z.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bell_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bell-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bell_z(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bell-z.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def belt(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an belt.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bezier_curve(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bezier-curve.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bicycle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bicycle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def binary(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an binary.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def binoculars(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an binoculars.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def biohazard(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an biohazard.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bird(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bird.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def blueprint(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an blueprint.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bluetooth(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bluetooth.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bluetooth_connected(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bluetooth-connected.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bluetooth_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bluetooth-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bluetooth_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bluetooth-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def boat(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an boat.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bomb(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bomb.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bone(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bone.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def book(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an book.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def book_bookmark(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an book-bookmark.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def book_open(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an book-open.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def book_open_text(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an book-open-text.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def book_open_user(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an book-open-user.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bookmark(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bookmark.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bookmark_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bookmark-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bookmarks(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bookmarks.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bookmarks_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bookmarks-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def books(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an books.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def boot(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an boot.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def boules(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an boules.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bounding_box(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bounding-box.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bowl_food(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bowl-food.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bowl_steam(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bowl-steam.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bowling_ball(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bowling-ball.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def box_arrow_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an box-arrow-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def archive_box(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an archive-box.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def box_arrow_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an box-arrow-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def boxing_glove(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an boxing-glove.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def brackets_angle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an brackets-angle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def brackets_curly(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an brackets-curly.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def brackets_round(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an brackets-round.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def brackets_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an brackets-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def brain(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an brain.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def brandy(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an brandy.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bread(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bread.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bridge(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bridge.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def briefcase(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an briefcase.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def briefcase_metal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an briefcase-metal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def broadcast(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an broadcast.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def broom(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an broom.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def browser(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an browser.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def browsers(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an browsers.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bug(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bug.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bug_beetle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bug-beetle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bug_droid(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bug-droid.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def building(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an building.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def building_apartment(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an building-apartment.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def building_office(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an building-office.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def buildings(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an buildings.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bulldozer(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bulldozer.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def bus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an bus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def butterfly(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an butterfly.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cable_car(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cable-car.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cactus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cactus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cake(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cake.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def calculator(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an calculator.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def calendar(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an calendar.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def calendar_blank(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an calendar-blank.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def calendar_check(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an calendar-check.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def calendar_dot(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an calendar-dot.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def calendar_dots(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an calendar-dots.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def calendar_heart(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an calendar-heart.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def calendar_minus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an calendar-minus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def calendar_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an calendar-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def calendar_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an calendar-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def calendar_star(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an calendar-star.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def calendar_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an calendar-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def call_bell(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an call-bell.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def camera(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an camera.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def camera_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an camera-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def camera_rotate(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an camera-rotate.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def camera_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an camera-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def campfire(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an campfire.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def car(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an car.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def car_battery(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an car-battery.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def car_profile(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an car-profile.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def car_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an car-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cardholder(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cardholder.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cards(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cards.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cards_three(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cards-three.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_circle_double_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-circle-double-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_circle_double_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-circle-double-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_circle_double_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-circle-double-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_circle_double_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-circle-double-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_circle_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-circle-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_circle_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-circle-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_circle_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-circle-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_circle_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-circle-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_circle_up_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-circle-up-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_double_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-double-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_double_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-double-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_double_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-double-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_double_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-double-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_line_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-line-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_line_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-line-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_line_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-line-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_line_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-line-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def caret_up_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an caret-up-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def carrot(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an carrot.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cash_register(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cash-register.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cassette_tape(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cassette-tape.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def castle_turret(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an castle-turret.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cat(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cat.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cell_signal_full(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cell-signal-full.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cell_signal_high(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cell-signal-high.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cell_signal_low(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cell-signal-low.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cell_signal_medium(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cell-signal-medium.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cell_signal_none(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cell-signal-none.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cell_signal_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cell-signal-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cell_signal_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cell-signal-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cell_tower(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cell-tower.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def certificate(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an certificate.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chair(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chair.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chalkboard(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chalkboard.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chalkboard_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chalkboard-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chalkboard_teacher(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chalkboard-teacher.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def champagne(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an champagne.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def charging_station(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an charging-station.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chart_bar(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chart-bar.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chart_bar_horizontal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chart-bar-horizontal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chart_donut(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chart-donut.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chart_line(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chart-line.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chart_line_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chart-line-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chart_line_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chart-line-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chart_pie(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chart-pie.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chart_pie_slice(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chart-pie-slice.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chart_polar(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chart-polar.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chart_scatter(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chart-scatter.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_centered(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-centered.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_centered_dots(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-centered-dots.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_centered_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-centered-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_centered_text(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-centered-text.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_circle_dots(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-circle-dots.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_circle_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-circle-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_circle_text(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-circle-text.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_dots(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-dots.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_teardrop(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-teardrop.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_teardrop_dots(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-teardrop-dots.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_teardrop_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-teardrop-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_teardrop_text(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-teardrop-text.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chat_text(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chat-text.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chats(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chats.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chats_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chats-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chats_teardrop(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chats-teardrop.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def check(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an check.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def check_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an check-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def check_fat(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an check-fat.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def check_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an check-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def check_square_offset(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an check-square-offset.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def checkerboard(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an checkerboard.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def checks(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an checks.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cheers(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cheers.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cheese(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cheese.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def chef_hat(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an chef-hat.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cherries(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cherries.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def church(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an church.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cigarette(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cigarette.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cigarette_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cigarette-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circle_dashed(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circle-dashed.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circle_half(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circle-half.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circle_half_tilt(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circle-half-tilt.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circle_notch(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circle-notch.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circles_four(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circles-four.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circles_three(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circles-three.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circles_three_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circles-three-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circuitry(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circuitry.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def city(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an city.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def clipboard(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an clipboard.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def clipboard_text(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an clipboard-text.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def clock(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an clock.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def clock_afternoon(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an clock-afternoon.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def clock_clockwise(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an clock-clockwise.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def clock_countdown(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an clock-countdown.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def clock_counter_clockwise(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an clock-counter-clockwise.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def clock_user(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an clock-user.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def closed_captioning(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an closed-captioning.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud_arrow_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud-arrow-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud_arrow_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud-arrow-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud_check(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud-check.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud_fog(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud-fog.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud_lightning(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud-lightning.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud_moon(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud-moon.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud_rain(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud-rain.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud_snow(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud-snow.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud_sun(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud-sun.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud_warning(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud-warning.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cloud_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cloud-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def clover(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an clover.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def club(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an club.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def coat_hanger(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an coat-hanger.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def coda_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an coda-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def code(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an code.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def code_block(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an code-block.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def code_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an code-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def codepen_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an codepen-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def codesandbox_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an codesandbox-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def coffee(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an coffee.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def coffee_bean(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an coffee-bean.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def coin(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an coin.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def coin_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an coin-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def coins(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an coins.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def columns(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an columns.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def columns_plus_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an columns-plus-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def columns_plus_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an columns-plus-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def command(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an command.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def compass(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an compass.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def compass_rose(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an compass-rose.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def compass_tool(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an compass-tool.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def computer_tower(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an computer-tower.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def confetti(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an confetti.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def contactless_payment(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an contactless-payment.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def control(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an control.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cookie(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cookie.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cooking_pot(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cooking-pot.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def copy(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an copy.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def copy_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an copy-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def copyleft(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an copyleft.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def copyright(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an copyright.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def corners_in(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an corners-in.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def corners_out(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an corners-out.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def couch(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an couch.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def court_basketball(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an court-basketball.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cow(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cow.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cowboy_hat(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cowboy-hat.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cpu(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cpu.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def crane(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an crane.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def crane_tower(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an crane-tower.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def credit_card(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an credit-card.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cricket(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cricket.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def crop(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an crop.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cross(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cross.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def crosshair(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an crosshair.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def crosshair_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an crosshair-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def crown(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an crown.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def crown_cross(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an crown-cross.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def crown_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an crown-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cube(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cube.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cube_focus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cube-focus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cube_transparent(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cube-transparent.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_btc(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-btc.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_circle_dollar(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-circle-dollar.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_cny(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-cny.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_dollar(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-dollar.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_dollar_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-dollar-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_eth(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-eth.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_eur(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-eur.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_gbp(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-gbp.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_inr(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-inr.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_jpy(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-jpy.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_krw(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-krw.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_kzt(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-kzt.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_ngn(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-ngn.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def currency_rub(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an currency-rub.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cursor(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cursor.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cursor_click(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cursor-click.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cursor_text(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cursor-text.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def cylinder(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an cylinder.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def database(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an database.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def desk(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an desk.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def desktop(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an desktop.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def desktop_tower(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an desktop-tower.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def detective(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an detective.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dev_to_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dev-to-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def device_mobile(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an device-mobile.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def device_mobile_camera(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an device-mobile-camera.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def device_mobile_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an device-mobile-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def device_mobile_speaker(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an device-mobile-speaker.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def device_rotate(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an device-rotate.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def device_tablet(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an device-tablet.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def device_tablet_camera(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an device-tablet-camera.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def device_tablet_speaker(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an device-tablet-speaker.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def devices(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an devices.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def diamond(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an diamond.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def diamonds_four(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an diamonds-four.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dice_five(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dice-five.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dice_four(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dice-four.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dice_one(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dice-one.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dice_six(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dice-six.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dice_three(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dice-three.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dice_two(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dice-two.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def disc(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an disc.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def disco_ball(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an disco-ball.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def discord_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an discord-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def divide(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an divide.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dna(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dna.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dog(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dog.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def door(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an door.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def door_open(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an door-open.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dot(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dot.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dot_outline(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dot-outline.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dots_nine(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dots-nine.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dots_six(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dots-six.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dots_six_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dots-six-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dots_three(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dots-three.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dots_three_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dots-three-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dots_three_circle_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dots-three-circle-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dots_three_outline(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dots-three-outline.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dots_three_outline_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dots-three-outline-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dots_three_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dots-three-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def download(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an download.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def download_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an download-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dress(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dress.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dresser(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dresser.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dribbble_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dribbble-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def drone(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an drone.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def drop(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an drop.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def drop_half(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an drop-half.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def drop_half_bottom(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an drop-half-bottom.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def drop_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an drop-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def drop_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an drop-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def dropbox_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an dropbox-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def ear(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an ear.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def ear_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an ear-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def egg(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an egg.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def egg_crack(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an egg-crack.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def eject(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an eject.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def eject_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an eject-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def elevator(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an elevator.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def empty(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an empty.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def engine(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an engine.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def envelope(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an envelope.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def envelope_open(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an envelope-open.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def envelope_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an envelope-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def envelope_simple_open(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an envelope-simple-open.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def equalizer(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an equalizer.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def equals(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an equals.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def eraser(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an eraser.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def escalator_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an escalator-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def escalator_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an escalator-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def exam(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an exam.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def exclamation_mark(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an exclamation-mark.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def exclude(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an exclude.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def exclude_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an exclude-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def export(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an export.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def eye(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an eye.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def eye_closed(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an eye-closed.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def eye_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an eye-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def eyedropper(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an eyedropper.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def eyedropper_sample(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an eyedropper-sample.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def eyeglasses(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an eyeglasses.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def eyes(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an eyes.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def face_mask(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an face-mask.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def facebook_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an facebook-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def factory(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an factory.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def faders(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an faders.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def faders_horizontal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an faders-horizontal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fallout_shelter(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fallout-shelter.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fan(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fan.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def farm(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an farm.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fast_forward(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fast-forward.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fast_forward_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fast-forward-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def feather(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an feather.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fediverse_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fediverse-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def figma_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an figma-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_archive(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-archive.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_arrow_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-arrow-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_arrow_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-arrow-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_audio(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-audio.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_c(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-c.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_c_sharp(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-c-sharp.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_cloud(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-cloud.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_code(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-code.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_cpp(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-cpp.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_css(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-css.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_csv(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-csv.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_dashed(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-dashed.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_dotted(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-dotted.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_doc(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-doc.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_html(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-html.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_image(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-image.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_ini(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-ini.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_jpg(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-jpg.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_js(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-js.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_jsx(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-jsx.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_lock(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-lock.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_magnifying_glass(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-magnifying-glass.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_search(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-search.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_md(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-md.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_minus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-minus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_pdf(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-pdf.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_png(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-png.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_ppt(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-ppt.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_py(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-py.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_rs(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-rs.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_sql(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-sql.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_svg(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-svg.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_text(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-text.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_ts(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-ts.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_tsx(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-tsx.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_txt(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-txt.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_video(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-video.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_vue(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-vue.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_xls(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-xls.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def file_zip(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an file-zip.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def files(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an files.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def film_reel(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an film-reel.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def film_script(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an film-script.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def film_slate(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an film-slate.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def film_strip(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an film-strip.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fingerprint(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fingerprint.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fingerprint_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fingerprint-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def finn_the_human(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an finn-the-human.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fire(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fire.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fire_extinguisher(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fire-extinguisher.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fire_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fire-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fire_truck(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fire-truck.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def first_aid(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an first-aid.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def first_aid_kit(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an first-aid-kit.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fish(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fish.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fish_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fish-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flag(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flag.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flag_banner(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flag-banner.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flag_banner_fold(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flag-banner-fold.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flag_checkered(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flag-checkered.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flag_pennant(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flag-pennant.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flame(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flame.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flashlight(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flashlight.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flask(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flask.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flip_horizontal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flip-horizontal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flip_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flip-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def floppy_disk(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an floppy-disk.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def floppy_disk_back(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an floppy-disk-back.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flow_arrow(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flow-arrow.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flower(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flower.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flower_lotus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flower-lotus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flower_tulip(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flower-tulip.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def flying_saucer(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an flying-saucer.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_notch(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-notch.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_dashed(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-dashed.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_dotted(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-dotted.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_lock(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-lock.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_minus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-minus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_notch_minus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-notch-minus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_open(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-open.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_notch_open(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-notch-open.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_notch_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-notch-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_simple_dashed(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-simple-dashed.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_simple_dotted(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-simple-dotted.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_simple_lock(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-simple-lock.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_simple_minus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-simple-minus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_simple_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-simple-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_simple_star(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-simple-star.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_simple_user(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-simple-user.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_star(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-star.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folder_user(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folder-user.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def folders(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an folders.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def football(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an football.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def football_helmet(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an football-helmet.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def footprints(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an footprints.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def fork_knife(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an fork-knife.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def four_k(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an four-k.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def frame_corners(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an frame-corners.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def framer_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an framer-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def function(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an function.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def funnel(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an funnel.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def funnel_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an funnel-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def funnel_simple_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an funnel-simple-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def funnel_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an funnel-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def game_controller(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an game-controller.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def garage(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an garage.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gas_can(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gas-can.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gas_pump(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gas-pump.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gauge(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gauge.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gavel(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gavel.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gear(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gear.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gear_fine(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gear-fine.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gear_six(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gear-six.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gender_female(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gender-female.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gender_intersex(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gender-intersex.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gender_male(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gender-male.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gender_neuter(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gender-neuter.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gender_nonbinary(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gender-nonbinary.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gender_transgender(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gender-transgender.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def ghost(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an ghost.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gif(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gif.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gift(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gift.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def git_branch(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an git-branch.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def git_commit(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an git-commit.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def git_diff(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an git-diff.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def git_fork(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an git-fork.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def git_merge(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an git-merge.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def git_pull_request(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an git-pull-request.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def github_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an github-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gitlab_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gitlab-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gitlab_logo_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gitlab-logo-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def globe(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an globe.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def globe_hemisphere_east(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an globe-hemisphere-east.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def globe_hemisphere_west(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an globe-hemisphere-west.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def globe_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an globe-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def globe_simple_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an globe-simple-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def globe_stand(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an globe-stand.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def globe_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an globe-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def goggles(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an goggles.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def golf(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an golf.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def goodreads_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an goodreads-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def google_cardboard_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an google-cardboard-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def google_chrome_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an google-chrome-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def google_drive_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an google-drive-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def google_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an google-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def google_photos_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an google-photos-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def google_play_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an google-play-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def google_podcasts_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an google-podcasts-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gps(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gps.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gps_fix(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gps-fix.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gps_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gps-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def gradient(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an gradient.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def graduation_cap(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an graduation-cap.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def grains(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an grains.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def grains_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an grains-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def graph(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an graph.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def graphics_card(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an graphics-card.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def greater_than(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an greater-than.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def greater_than_or_equal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an greater-than-or-equal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def grid_four(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an grid-four.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def grid_nine(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an grid-nine.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def guitar(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an guitar.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hair_dryer(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hair-dryer.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hamburger(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hamburger.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hammer(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hammer.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_arrow_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-arrow-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_arrow_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-arrow-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_coins(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-coins.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_deposit(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-deposit.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_eye(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-eye.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_fist(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-fist.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_grabbing(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-grabbing.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_heart(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-heart.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_palm(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-palm.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_peace(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-peace.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_pointing(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-pointing.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_soap(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-soap.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_swipe_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-swipe-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_swipe_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-swipe-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_tap(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-tap.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_waving(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-waving.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hand_withdraw(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hand-withdraw.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def handbag(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an handbag.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def handbag_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an handbag-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hands_clapping(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hands-clapping.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hands_praying(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hands-praying.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def handshake(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an handshake.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hard_drive(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hard-drive.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hard_drives(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hard-drives.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hard_hat(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hard-hat.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hash_straight(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hash-straight.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def head_circuit(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an head-circuit.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def headlights(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an headlights.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def headphones(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an headphones.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def headset(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an headset.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def heart(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an heart.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def heart_break(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an heart-break.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def heart_half(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an heart-half.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def heart_straight(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an heart-straight.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def heart_straight_break(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an heart-straight-break.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def heartbeat(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an heartbeat.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hexagon(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hexagon.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def high_definition(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an high-definition.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def high_heel(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an high-heel.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def highlighter(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an highlighter.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def highlighter_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an highlighter-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hockey(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hockey.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hoodie(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hoodie.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def horse(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an horse.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hospital(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hospital.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hourglass(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hourglass.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hourglass_high(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hourglass-high.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hourglass_low(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hourglass-low.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hourglass_medium(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hourglass-medium.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hourglass_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hourglass-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hourglass_simple_high(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hourglass-simple-high.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hourglass_simple_low(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hourglass-simple-low.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hourglass_simple_medium(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hourglass-simple-medium.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def house(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an house.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def house_line(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an house-line.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def house_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an house-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def hurricane(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an hurricane.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def ice_cream(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an ice-cream.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def identification_badge(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an identification-badge.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def identification_card(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an identification-card.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def image(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an image.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def image_broken(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an image-broken.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def image_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an image-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def images(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an images.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def images_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an images-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def infinity(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an infinity.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lemniscate(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lemniscate.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def info(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an info.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def instagram_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an instagram-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def intersect(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an intersect.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def intersect_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an intersect-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def intersect_three(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an intersect-three.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def intersection(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an intersection.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def invoice(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an invoice.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def island(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an island.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def jar(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an jar.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def jar_label(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an jar-label.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def jeep(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an jeep.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def joystick(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an joystick.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def kanban(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an kanban.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def key(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an key.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def key_return(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an key-return.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def keyboard(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an keyboard.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def keyhole(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an keyhole.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def knife(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an knife.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def ladder(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an ladder.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def ladder_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an ladder-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lamp(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lamp.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lamp_pendant(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lamp-pendant.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def laptop(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an laptop.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lasso(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lasso.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lastfm_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lastfm-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def layout(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an layout.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def leaf(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an leaf.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lectern(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lectern.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lego(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lego.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lego_smiley(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lego-smiley.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def less_than(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an less-than.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def less_than_or_equal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an less-than-or-equal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def letter_circle_h(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an letter-circle-h.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def letter_circle_p(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an letter-circle-p.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def letter_circle_v(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an letter-circle-v.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lifebuoy(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lifebuoy.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lightbulb(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lightbulb.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lightbulb_filament(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lightbulb-filament.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lighthouse(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lighthouse.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lightning(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lightning.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lightning_a(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lightning-a.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lightning_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lightning-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def line_segment(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an line-segment.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def line_segments(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an line-segments.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def line_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an line-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def link(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an link.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def link_break(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an link-break.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def link_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an link-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def link_simple_break(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an link-simple-break.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def link_simple_horizontal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an link-simple-horizontal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def link_simple_horizontal_break(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an link-simple-horizontal-break.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def linkedin_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an linkedin-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def linktree_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an linktree-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def linux_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an linux-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def list(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an list.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def list_bullets(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an list-bullets.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def list_checks(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an list-checks.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def list_dashes(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an list-dashes.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def list_heart(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an list-heart.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def list_magnifying_glass(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an list-magnifying-glass.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def list_numbers(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an list-numbers.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def list_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an list-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def list_star(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an list-star.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lock(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lock.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lock_key(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lock-key.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lock_key_open(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lock-key-open.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lock_laminated(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lock-laminated.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lock_laminated_open(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lock-laminated-open.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lock_open(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lock-open.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lock_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lock-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lock_simple_open(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lock-simple-open.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def lockers(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an lockers.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def log(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an log.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def magic_wand(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an magic-wand.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def magnet(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an magnet.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def magnet_straight(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an magnet-straight.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def magnifying_glass(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an magnifying-glass.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def magnifying_glass_minus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an magnifying-glass-minus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def magnifying_glass_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an magnifying-glass-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def mailbox(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an mailbox.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def map_pin(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an map-pin.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def map_pin_area(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an map-pin-area.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def map_pin_line(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an map-pin-line.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def map_pin_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an map-pin-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def map_pin_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an map-pin-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def map_pin_simple_area(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an map-pin-simple-area.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def map_pin_simple_line(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an map-pin-simple-line.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def map_trifold(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an map-trifold.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def markdown_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an markdown-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def marker_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an marker-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def martini(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an martini.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def mask_happy(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an mask-happy.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def mask_sad(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an mask-sad.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def mastodon_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an mastodon-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def math_operations(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an math-operations.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def matrix_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an matrix-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def medal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an medal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def medal_military(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an medal-military.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def medium_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an medium-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def megaphone(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an megaphone.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def megaphone_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an megaphone-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def member_of(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an member-of.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def memory(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an memory.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def messenger_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an messenger-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def meta_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an meta-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def meteor(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an meteor.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def metronome(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an metronome.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def microphone(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an microphone.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def microphone_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an microphone-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def microphone_stage(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an microphone-stage.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def microscope(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an microscope.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def microsoft_excel_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an microsoft-excel-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def microsoft_outlook_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an microsoft-outlook-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def microsoft_powerpoint_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an microsoft-powerpoint-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def microsoft_teams_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an microsoft-teams-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def microsoft_word_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an microsoft-word-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def minus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an minus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def minus_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an minus-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def minus_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an minus-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def money(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an money.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def money_wavy(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an money-wavy.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def monitor(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an monitor.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def monitor_arrow_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an monitor-arrow-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def monitor_play(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an monitor-play.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def moon(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an moon.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def moon_stars(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an moon-stars.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def moped(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an moped.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def moped_front(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an moped-front.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def mosque(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an mosque.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def motorcycle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an motorcycle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def mountains(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an mountains.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def mouse(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an mouse.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def mouse_left_click(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an mouse-left-click.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def mouse_middle_click(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an mouse-middle-click.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def mouse_right_click(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an mouse-right-click.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def mouse_scroll(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an mouse-scroll.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def mouse_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an mouse-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def music_note(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an music-note.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def music_note_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an music-note-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def music_notes(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an music-notes.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def music_notes_minus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an music-notes-minus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def music_notes_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an music-notes-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def music_notes_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an music-notes-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def navigation_arrow(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an navigation-arrow.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def needle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an needle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def network(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an network.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def network_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an network-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def network_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an network-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def newspaper(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an newspaper.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def newspaper_clipping(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an newspaper-clipping.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def not_equals(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an not-equals.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def not_member_of(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an not-member-of.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def not_subset_of(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an not-subset-of.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def not_superset_of(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an not-superset-of.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def notches(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an notches.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def note(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an note.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def note_blank(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an note-blank.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def note_pencil(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an note-pencil.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def notebook(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an notebook.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def notepad(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an notepad.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def notification(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an notification.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def notion_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an notion-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def nuclear_plant(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an nuclear-plant.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_circle_eight(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-circle-eight.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_circle_five(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-circle-five.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_circle_four(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-circle-four.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_circle_nine(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-circle-nine.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_circle_one(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-circle-one.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_circle_seven(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-circle-seven.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_circle_six(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-circle-six.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_circle_three(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-circle-three.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_circle_two(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-circle-two.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_circle_zero(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-circle-zero.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_eight(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-eight.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_five(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-five.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_four(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-four.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_nine(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-nine.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_one(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-one.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_seven(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-seven.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_six(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-six.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_square_eight(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-square-eight.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_square_five(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-square-five.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_square_four(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-square-four.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_square_nine(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-square-nine.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_square_one(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-square-one.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_square_seven(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-square-seven.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_square_six(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-square-six.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_square_three(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-square-three.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_square_two(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-square-two.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_square_zero(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-square-zero.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_three(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-three.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_two(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-two.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def number_zero(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an number-zero.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def numpad(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an numpad.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def nut(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an nut.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def ny_times_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an ny-times-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def octagon(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an octagon.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def office_chair(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an office-chair.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def onigiri(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an onigiri.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def open_ai_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an open-ai-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def option(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an option.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def orange(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an orange.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def orange_slice(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an orange-slice.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def oven(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an oven.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def package(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an package.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paint_brush(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paint-brush.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paint_brush_broad(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paint-brush-broad.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paint_brush_household(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paint-brush-household.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paint_bucket(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paint-bucket.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paint_roller(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paint-roller.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def palette(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an palette.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def panorama(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an panorama.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pants(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pants.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paper_plane(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paper-plane.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paper_plane_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paper-plane-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paper_plane_tilt(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paper-plane-tilt.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paperclip(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paperclip.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paperclip_horizontal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paperclip-horizontal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def parachute(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an parachute.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paragraph(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paragraph.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def parallelogram(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an parallelogram.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def park(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an park.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def password(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an password.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def path(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an path.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def patreon_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an patreon-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pause(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pause.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pause_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pause-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paw_print(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paw-print.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def paypal_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an paypal-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def peace(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an peace.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pen(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pen.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pen_nib(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pen-nib.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pen_nib_straight(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pen-nib-straight.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pencil(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pencil.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pencil_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pencil-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pencil_line(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pencil-line.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pencil_ruler(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pencil-ruler.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pencil_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pencil-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pencil_simple_line(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pencil-simple-line.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pencil_simple_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pencil-simple-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pencil_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pencil-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pentagon(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pentagon.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pentagram(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pentagram.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pepper(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pepper.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def percent(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an percent.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person_arms_spread(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person-arms-spread.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person_simple_bike(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person-simple-bike.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person_simple_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person-simple-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person_simple_hike(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person-simple-hike.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person_simple_run(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person-simple-run.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person_simple_ski(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person-simple-ski.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person_simple_snowboard(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person-simple-snowboard.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person_simple_swim(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person-simple-swim.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person_simple_tai_chi(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person-simple-tai-chi.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person_simple_throw(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person-simple-throw.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def person_simple_walk(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an person-simple-walk.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def perspective(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an perspective.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def phone(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an phone.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def phone_call(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an phone-call.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def phone_disconnect(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an phone-disconnect.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def phone_incoming(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an phone-incoming.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def phone_list(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an phone-list.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def phone_outgoing(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an phone-outgoing.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def phone_pause(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an phone-pause.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def phone_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an phone-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def phone_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an phone-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def phone_transfer(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an phone-transfer.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def phone_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an phone-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def phosphor_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an phosphor-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pi(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pi.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def piano_keys(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an piano-keys.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def picnic_table(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an picnic-table.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def picture_in_picture(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an picture-in-picture.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def piggy_bank(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an piggy-bank.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pill(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pill.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def ping_pong(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an ping-pong.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pint_glass(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pint-glass.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pinterest_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pinterest-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pinwheel(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pinwheel.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pipe(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pipe.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pipe_wrench(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pipe-wrench.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pix_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pix-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pizza(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pizza.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def placeholder(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an placeholder.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def planet(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an planet.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def plant(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an plant.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def play(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an play.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def play_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an play-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def play_pause(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an play-pause.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def playlist(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an playlist.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def plug(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an plug.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def plug_charging(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an plug-charging.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def plugs(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an plugs.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def plugs_connected(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an plugs-connected.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def plus_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an plus-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def plus_minus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an plus-minus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def plus_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an plus-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def poker_chip(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an poker-chip.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def police_car(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an police-car.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def polygon(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an polygon.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def popcorn(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an popcorn.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def popsicle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an popsicle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def potted_plant(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an potted-plant.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def power(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an power.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def prescription(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an prescription.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def presentation(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an presentation.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def presentation_chart(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an presentation-chart.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def printer(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an printer.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def prohibit(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an prohibit.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def prohibit_inset(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an prohibit-inset.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def projector_screen(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an projector-screen.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def projector_screen_chart(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an projector-screen-chart.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def pulse(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an pulse.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def activity(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an activity.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def push_pin(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an push-pin.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def push_pin_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an push-pin-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def push_pin_simple_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an push-pin-simple-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def push_pin_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an push-pin-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def puzzle_piece(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an puzzle-piece.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def qr_code(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an qr-code.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def question(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an question.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def question_mark(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an question-mark.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def queue(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an queue.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def quotes(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an quotes.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rabbit(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rabbit.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def racquet(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an racquet.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def radical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an radical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def radio(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an radio.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def radio_button(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an radio-button.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def radioactive(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an radioactive.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rainbow(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rainbow.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rainbow_cloud(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rainbow-cloud.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def ranking(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an ranking.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def read_cv_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an read-cv-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def receipt(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an receipt.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def receipt_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an receipt-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def record(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an record.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rectangle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rectangle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rectangle_dashed(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rectangle-dashed.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def recycle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an recycle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def reddit_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an reddit-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def repeat(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an repeat.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def repeat_once(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an repeat-once.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def replit_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an replit-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def resize(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an resize.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rewind(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rewind.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rewind_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rewind-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def road_horizon(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an road-horizon.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def robot(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an robot.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rocket(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rocket.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rocket_launch(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rocket-launch.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rows(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rows.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rows_plus_bottom(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rows-plus-bottom.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rows_plus_top(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rows-plus-top.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rss(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rss.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rss_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rss-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def rug(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an rug.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def ruler(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an ruler.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sailboat(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sailboat.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def scales(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an scales.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def scan(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an scan.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def scan_smiley(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an scan-smiley.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def scissors(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an scissors.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def scooter(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an scooter.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def screencast(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an screencast.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def screwdriver(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an screwdriver.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def scribble(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an scribble.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def scribble_loop(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an scribble-loop.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def scroll(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an scroll.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def seal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an seal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circle_wavy(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circle-wavy.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def seal_check(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an seal-check.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circle_wavy_check(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circle-wavy-check.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def seal_percent(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an seal-percent.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def seal_question(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an seal-question.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circle_wavy_question(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circle-wavy-question.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def seal_warning(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an seal-warning.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def circle_wavy_warning(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an circle-wavy-warning.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def seat(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an seat.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def seatbelt(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an seatbelt.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def security_camera(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an security-camera.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def selection(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an selection.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def selection_all(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an selection-all.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def selection_background(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an selection-background.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def selection_foreground(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an selection-foreground.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def selection_inverse(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an selection-inverse.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def selection_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an selection-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def selection_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an selection-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shapes(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shapes.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def share(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an share.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def share_fat(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an share-fat.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def share_network(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an share-network.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shield(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shield.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shield_check(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shield-check.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shield_checkered(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shield-checkered.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shield_chevron(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shield-chevron.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shield_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shield-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shield_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shield-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shield_star(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shield-star.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shield_warning(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shield-warning.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shipping_container(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shipping-container.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shirt_folded(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shirt-folded.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shooting_star(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shooting-star.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shopping_bag(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shopping-bag.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shopping_bag_open(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shopping-bag-open.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shopping_cart(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shopping-cart.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shopping_cart_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shopping-cart-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shovel(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shovel.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shower(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shower.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shrimp(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shrimp.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shuffle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shuffle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shuffle_angular(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shuffle-angular.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def shuffle_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an shuffle-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sidebar(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sidebar.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sidebar_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sidebar-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sigma(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sigma.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sign_in(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sign-in.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sign_out(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sign-out.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def signature(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an signature.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def signpost(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an signpost.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sim_card(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sim-card.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def siren(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an siren.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sketch_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sketch-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def skip_back(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an skip-back.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def skip_back_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an skip-back-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def skip_forward(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an skip-forward.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def skip_forward_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an skip-forward-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def skull(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an skull.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def skype_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an skype-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def slack_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an slack-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sliders(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sliders.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sliders_horizontal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sliders-horizontal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def slideshow(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an slideshow.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def smiley(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an smiley.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def smiley_angry(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an smiley-angry.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def smiley_blank(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an smiley-blank.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def smiley_meh(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an smiley-meh.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def smiley_melting(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an smiley-melting.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def smiley_nervous(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an smiley-nervous.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def smiley_sad(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an smiley-sad.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def smiley_sticker(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an smiley-sticker.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def smiley_wink(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an smiley-wink.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def smiley_x_eyes(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an smiley-x-eyes.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def snapchat_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an snapchat-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sneaker(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sneaker.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sneaker_move(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sneaker-move.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def snowflake(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an snowflake.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def soccer_ball(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an soccer-ball.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sock(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sock.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def solar_panel(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an solar-panel.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def solar_roof(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an solar-roof.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sort_ascending(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sort-ascending.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sort_descending(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sort-descending.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def soundcloud_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an soundcloud-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def spade(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an spade.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sparkle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sparkle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def speaker_hifi(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an speaker-hifi.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def speaker_high(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an speaker-high.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def speaker_low(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an speaker-low.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def speaker_none(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an speaker-none.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def speaker_simple_high(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an speaker-simple-high.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def speaker_simple_low(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an speaker-simple-low.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def speaker_simple_none(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an speaker-simple-none.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def speaker_simple_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an speaker-simple-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def speaker_simple_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an speaker-simple-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def speaker_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an speaker-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def speaker_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an speaker-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def speedometer(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an speedometer.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sphere(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sphere.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def spinner(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an spinner.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def spinner_ball(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an spinner-ball.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def spinner_gap(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an spinner-gap.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def spiral(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an spiral.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def split_horizontal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an split-horizontal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def split_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an split-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def spotify_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an spotify-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def spray_bottle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an spray-bottle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def square_half(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an square-half.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def square_half_bottom(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an square-half-bottom.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def square_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an square-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def square_split_horizontal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an square-split-horizontal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def square_split_vertical(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an square-split-vertical.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def squares_four(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an squares-four.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def stack(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an stack.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def stack_minus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an stack-minus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def stack_overflow_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an stack-overflow-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def stack_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an stack-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def stack_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an stack-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def stairs(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an stairs.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def stamp(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an stamp.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def standard_definition(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an standard-definition.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def star(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an star.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def star_and_crescent(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an star-and-crescent.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def star_four(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an star-four.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def star_half(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an star-half.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def star_of_david(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an star-of-david.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def steam_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an steam-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def steering_wheel(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an steering-wheel.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def steps(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an steps.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def stethoscope(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an stethoscope.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sticker(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sticker.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def stool(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an stool.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def stop(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an stop.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def stop_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an stop-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def storefront(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an storefront.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def strategy(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an strategy.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def stripe_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an stripe-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def student(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an student.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def subset_of(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an subset-of.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def subset_proper_of(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an subset-proper-of.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def subtitles(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an subtitles.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def subtitles_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an subtitles-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def subtract(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an subtract.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def subtract_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an subtract-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def subway(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an subway.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def suitcase(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an suitcase.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def suitcase_rolling(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an suitcase-rolling.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def suitcase_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an suitcase-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sun(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sun.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sun_dim(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sun-dim.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sun_horizon(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sun-horizon.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sunglasses(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sunglasses.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def superset_of(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an superset-of.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def superset_proper_of(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an superset-proper-of.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def swap(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an swap.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def swatches(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an swatches.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def swimming_pool(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an swimming-pool.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def sword(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an sword.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def synagogue(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an synagogue.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def syringe(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an syringe.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def t_shirt(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an t-shirt.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def table(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an table.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tabs(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tabs.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tag(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tag.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tag_chevron(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tag-chevron.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tag_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tag-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def target(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an target.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def taxi(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an taxi.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tea_bag(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tea-bag.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def telegram_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an telegram-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def television(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an television.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def television_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an television-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tennis_ball(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tennis-ball.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tent(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tent.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def terminal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an terminal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def terminal_window(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an terminal-window.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def test_tube(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an test-tube.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_a_underline(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-a-underline.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_aa(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-aa.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_align_center(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-align-center.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_align_justify(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-align-justify.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_align_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-align-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_align_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-align-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_b(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-b.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_bolder(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-bolder.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_columns(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-columns.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_h(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-h.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_h_five(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-h-five.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_h_four(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-h-four.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_h_one(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-h-one.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_h_six(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-h-six.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_h_three(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-h-three.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_h_two(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-h-two.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_indent(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-indent.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_italic(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-italic.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_outdent(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-outdent.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_strikethrough(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-strikethrough.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_subscript(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-subscript.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_superscript(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-superscript.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_t(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-t.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_t_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-t-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def text_underline(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an text-underline.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def textbox(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an textbox.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def thermometer(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an thermometer.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def thermometer_cold(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an thermometer-cold.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def thermometer_hot(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an thermometer-hot.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def thermometer_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an thermometer-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def threads_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an threads-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def three_d(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an three-d.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def thumbs_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an thumbs-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def thumbs_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an thumbs-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def ticket(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an ticket.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tidal_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tidal-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tiktok_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tiktok-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tilde(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tilde.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def timer(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an timer.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tip_jar(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tip-jar.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tipi(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tipi.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tire(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tire.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def toggle_left(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an toggle-left.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def toggle_right(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an toggle-right.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def toilet(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an toilet.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def toilet_paper(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an toilet-paper.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def toolbox(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an toolbox.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tooth(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tooth.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tornado(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tornado.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tote(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tote.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tote_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tote-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def towel(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an towel.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tractor(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tractor.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def trademark(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an trademark.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def trademark_registered(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an trademark-registered.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def traffic_cone(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an traffic-cone.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def traffic_sign(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an traffic-sign.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def traffic_signal(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an traffic-signal.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def train(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an train.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def train_regional(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an train-regional.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def train_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an train-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tram(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tram.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def translate(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an translate.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def trash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an trash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def trash_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an trash-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tray(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tray.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tray_arrow_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tray-arrow-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def archive_tray(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an archive-tray.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tray_arrow_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tray-arrow-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def treasure_chest(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an treasure-chest.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tree(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tree.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tree_evergreen(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tree-evergreen.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tree_palm(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tree-palm.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tree_structure(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tree-structure.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tree_view(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tree-view.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def trend_down(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an trend-down.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def trend_up(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an trend-up.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def triangle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an triangle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def triangle_dashed(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an triangle-dashed.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def trolley(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an trolley.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def trolley_suitcase(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an trolley-suitcase.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def trophy(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an trophy.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def truck(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an truck.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def truck_trailer(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an truck-trailer.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def tumblr_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an tumblr-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def twitch_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an twitch-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def twitter_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an twitter-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def umbrella(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an umbrella.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def umbrella_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an umbrella-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def union(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an union.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def unite(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an unite.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def unite_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an unite-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def upload(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an upload.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def upload_simple(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an upload-simple.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def usb(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an usb.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_check(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-check.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_circle_check(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-circle-check.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_circle_dashed(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-circle-dashed.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_circle_gear(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-circle-gear.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_circle_minus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-circle-minus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_circle_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-circle-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_focus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-focus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_gear(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-gear.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_list(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-list.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_minus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-minus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_plus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-plus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_rectangle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-rectangle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_sound(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-sound.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def user_switch(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an user-switch.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def users(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an users.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def users_four(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an users-four.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def users_three(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an users-three.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def van(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an van.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def vault(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an vault.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def vector_three(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an vector-three.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def vector_two(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an vector-two.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def vibrate(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an vibrate.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def video(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an video.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def video_camera(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an video-camera.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def video_camera_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an video-camera-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def video_conference(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an video-conference.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def vignette(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an vignette.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def vinyl_record(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an vinyl-record.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def virtual_reality(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an virtual-reality.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def virus(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an virus.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def visor(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an visor.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def voicemail(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an voicemail.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def volleyball(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an volleyball.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wall(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wall.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wallet(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wallet.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def warehouse(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an warehouse.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def warning(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an warning.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def warning_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an warning-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def warning_diamond(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an warning-diamond.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def warning_octagon(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an warning-octagon.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def washing_machine(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an washing-machine.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def watch(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an watch.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wave_sawtooth(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wave-sawtooth.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wave_sine(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wave-sine.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wave_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wave-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wave_triangle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wave-triangle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def waveform(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an waveform.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def waveform_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an waveform-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def waves(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an waves.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def webcam(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an webcam.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def webcam_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an webcam-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def webhooks_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an webhooks-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wechat_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wechat-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def whatsapp_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an whatsapp-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wheelchair(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wheelchair.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wheelchair_motion(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wheelchair-motion.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wifi_high(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wifi-high.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wifi_low(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wifi-low.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wifi_medium(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wifi-medium.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wifi_none(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wifi-none.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wifi_slash(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wifi-slash.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wifi_x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wifi-x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wind(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wind.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def windmill(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an windmill.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def windows_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an windows-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wine(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wine.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def wrench(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an wrench.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def x(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an x.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def x_circle(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an x-circle.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def x_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an x-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def x_square(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an x-square.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def yarn(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an yarn.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def yin_yang(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an yin-yang.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

@drawlib.v0_1.private.util.error_handler
def youtube_logo(xy: typing.Tuple[float, float], width: float, angle: typing.Union[int, float] = ..., style: typing.Union[drawlib.v0_1.private.core.model.IconStyle, str, None] = ...) -> None:
    """Draws a Phosphor icon representing an youtube-logo.

    Args:
        xy: Tuple of floats (x, y) representing the coordinates of the icon's center.
            Default alignment is center, center.
        width: Horizontal size of the icon.
        angle: Rotation angle of the icon (0.0 to 360.0 degrees).
        style: Style of the icon as an IconStyle object, string, or None.

    """
    ...

