[build-system]
requires = [ "poetry-core",]
build-backend = "poetry.core.masonry.api"

# GENERATED CODE: START
# from drawlib.__init__.py

[tool.poetry]
name = "drawlib"
version = "0.1.34"
description = "Python drawing library. Illustration as Code."
homepage = "https://www.drawlib.com"
repository = "https://github.com/yuichi110/drawlib"
authors = [
    "Yuichi Ito <yuichi@yuichi.com>",
]
readme = "pypi.md"

# GENERATED CODE: END

[tool.poetry.scripts]
drawlib = "drawlib.__main__:main"

# minimum python version is 3.9 as of 2024 Jun due to lib dependency
[tool.poetry.dependencies]
python = "^3.9"
matplotlib = "^3.8.3"
pygments = "^2.17.2"

[tool.poetry.group.dev.dependencies]
types-pillow = "^10.2.0.20240311"
ruff = "^0.5.0"
pyright = "^1.1.369"
pytest = "^8.1.1"
pytest-cov = "^5.0.0"

[tool.ruff]
preview = true
fix = true
unsafe-fixes = false
line-length = 120

[tool.ruff.lint]
select = [
    "C90", # mccabe 
    "F",   # Pyflakes
    "D",   # pydocstyle
    "E",   # Pycodestyle Error
    "I",   # isort
    "N",   # pep8-naming (N)
    "W",   # Pycodestyle Warning
    "ANN", # flake8-annotations (ANN)
    "CPY", # flake8-copyright
    "S",   # flake8-bandit
    "PL"   # Pylint
]

ignore = [
    "D203",    # 1 blank line required before class docstring
    "D212",    # Multi-line docstring summary should start at the first line
    "D415",    # First line should end with a period, question mark, or exclamation point
    "F401",    # imported but unused
    "ANN101",  # Missing type annotation for self in method
    "PLC1901", # compare-to-empty-string
    "PLR0904", # Too many public methods
    "PLR0912", # Too many branches
    "PLR0913", # Too many arguments in function definition
    "PLR0914", # Too many local variables
    "PLR0915", # Too many statements
    "PLR0917", # Too many positional arguments
    "PLR2004", # Magic value used in comparison
    "PLW2901"  # Outer variable overwritten by inner target
]

[tool.ruff.lint.per-file-ignores]
"scripts/**.py" = [
    "ANN",  # flake8-annotations
    "S101", # Use of assert detected
    "S310"  # Audit URL open for permitted schemes
]
"tests/**.py" = [
    "F403", # undefined-local-with-import-star
    "F405", # undefined-local-with-import-star-usage
    "D100", # undocumented-public-module
    "D103", # undocumented-public-function
    "D104", # undocumented-public-package
    "ANN",  # flake8-annotations
    "S101"  # Use of assert detected
]
"test_build_target/**.py" = [
    "F403", # undefined-local-with-import-star
    "F405", # undefined-local-with-import-star-usage
    "D100", # undocumented-public-module
    "D103", # undocumented-public-function
]

[tool.ruff.lint.pydocstyle]
convention = "google"